<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Blog Site</title>
    <link>https://jordandavidson1990.github.io/</link>
    <description>Recent content on My Blog Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Sep 2019 15:07:24 +0100</lastBuildDate>
    
	<atom:link href="https://jordandavidson1990.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Authenication</title>
      <link>https://jordandavidson1990.github.io/post/authenication/</link>
      <pubDate>Tue, 24 Sep 2019 15:07:24 +0100</pubDate>
      
      <guid>https://jordandavidson1990.github.io/post/authenication/</guid>
      <description>Using Authenication with Vue and MongoDb Lesson Objectives  Know how to use axios, jsonwebtoken and mongoose Understand how to verify user Be able to make a basic authenication app.  Introduction We are going to try make basic authenication functionality using a Vue frontend and mongodb/express backend incorporating mongoose, axios, jsonwebtoken and bcrypt.
 Hand out start code
 // terminal server directory mongod npm install npm start  // terminal client directory npm install npm run serve  Visit localhost:3000 and you should see &amp;ldquo;hello world&amp;rdquo;.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://jordandavidson1990.github.io/post/authenicate_start_code/server/public/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jordandavidson1990.github.io/post/authenicate_start_code/server/public/</guid>
      <description> favicon.ico&#34; authenicate_2    We&#39;re sorry but authenicate_2 doesn&#39;t work properly without JavaScript enabled. Please enable it to continue.     </description>
    </item>
    
  </channel>
</rss>